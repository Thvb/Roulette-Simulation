for(i in 1:500){tmp<-roulette(500,50,"evenbets",500,100)
storeeven[i,1:2] <- c(tmp$round[nrow(tmp)],tmp$money[nrow(tmp)])}
t.test(storeeven[storeeven[,2]>0,1],storeeven[storeeven[,2]==0,1])
for(i in 1:500){tmp<-roulette(500,50,"evenbets",500,300)
storeeven[i,1:2] <- c(tmp$round[nrow(tmp)],tmp$money[nrow(tmp)])}
t.test(storeeven[storeeven[,2]>0,1],storeeven[storeeven[,2]==0,1])
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/wheel.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/outcome.r', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/bets.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
roulette(100,10,"evenbets")
roulette(100,10,"evenbets",maxwin="1000")
roulette(100,10,"evenbets",maxwin=1000)
roulette(100,10,"evenbets",maxloss=500,maxwin=1000)
roulette(1000,10,"evenbets",maxloss=500,maxwin=1000)
tablemax=50
sample(seq(0,tablemax,by=5),1)
sample(seq(0,tablemax,by=5),1)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
roulette(1000,10,"evenbets","max",maxloss=500,maxwin=1000)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
roulette(1000,10,"evenbets","max",maxloss=500,maxwin=1000)
roulette(1000,c(5,20),"evenbets","max",maxloss=500,maxwin=1000)
money=1000
placingstrategy="
evenbets"
bettingstrategy="max"
round=1
tablelimit=c(5,10)
stopifnot(length(tablelimit)<3)
if(length(tablelimit)==1){
tablemin = 1
tablemax = tablelimit
}else{
tablemin = min(tablelimit)
tablemax = max(tablelimit)
}
evenbets <- bets[payouts==1]
betz <- bets()
wheeloutcomes <- unlist(c(betz$straightbets,betz$zeros))
betslist <- c(unlist(lapply(betz[1:6],function(x){if(is.matrix(x)){colnames(x)}})),paste0(names(betz)[7:length(betz)]))
payoutslist <- c(rep(35,38),rep(17,50),rep(11,12),rep(5,11),rep(8,22),rep(2,3),rep(2,3),rep(1,2),rep(1,2),rep(1,2))
names(payoutslist) <- betslist
memo <- mat.or.vec(0,6)
colnames(memo) <- c("round","bets","roll","payout","money","bankwin")
payouts=payoutslist
evenbets <- bets[payouts==1]
payouts
bets=betz
evenbets <- bets[payouts==1]
evenbets
bets
betz <- bets()
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/bets.R', echo=TRUE)
betz <- bets()
bets=betslist
evenbets <- bets[payouts==1]
evenbets
placingstrategy=="random"|placingstrategy=="evenbets"
placingstrategy=="evenbets"
placingstrategy
placingstrategy <- match.arg(placingstrategy,c("evenbets","random","strat3"))
bettingstrategy <- match.arg(bettingstrategy,c("min","max","random"))
placingstrategy="evenbets"
placingstrategy <- match.arg(placingstrategy,c("evenbets","random","strat3"))
placingstrategy=="random"|placingstrategy=="evenbets"
money<=tablemax
bettingstrategy
betpile <- tablemax
betpile
bets
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
roulette(1000,c(5,20),"evenbets","max",maxloss=500,maxwin=1000)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/bets.R', echo=TRUE)
roulette(1000,c(5,20),"evenbets","max",maxloss=500,maxwin=1000)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
roulette(1000,c(5,20),"evenbets","max",maxloss=500,maxwin=1000)
startamount=1000
tablelimit=c(5,20)
bettingstrategy="max"
placingstrategy="evenbets"
maxloss=500
maxwin=1000
money <- startamount
placingstrategy <- match.arg(placingstrategy,c("evenbets","random","strat3"))
bettingstrategy <- match.arg(bettingstrategy,c("min","max","random"))
betz <- bets()
wheeloutcomes <- unlist(c(betz$straightbets,betz$zeros))
betslist <- c(unlist(lapply(betz[1:6],function(x){if(is.matrix(x)){colnames(x)}})),paste0(names(betz)[7:length(betz)]))
payoutslist <- c(rep(35,38),rep(17,50),rep(11,12),rep(5,11),rep(8,22),rep(2,3),rep(2,3),rep(1,2),rep(1,2),rep(1,2))
names(payoutslist) <- betslist
memo <- mat.or.vec(0,6)
colnames(memo) <- c("round","bets","roll","payout","money","bankwin")
round <- 1
(money<(startamount+maxwin))&(money>(startamount-maxloss))&(money>0)&(min(tablelimit)<money)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
roulette(1000,c(5,20),"evenbets","max",maxloss=500,maxwin=1000)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
roulette(1000,c(5,20),"evenbets","max",maxloss=500,maxwin=1000)
playbyplay <- roulette(1000,c(5,20),"evenbets","max",maxloss=500,maxwin=1000)
plot(round~money)
plot(money~round)
plot(playbyplay$money~playbyplay$round)
plot(playbyplay$money~playbyplay$round,type=l)
plot(playbyplay$money~playbyplay$round,type="l")
playbyplay <- sapply(roulette(1000,c(5,20),"evenbets","max",maxloss=500,maxwin=1000),function(x){cbind(x$round,x$money)}
)
playbyplay <- sapply(roulette(1000,c(5,20),"evenbets","max",maxloss=500,maxwin=1000),function(x){cbind(x[,1],x[,5])})
playbyplay <- sapply(roulette(1000,c(5,20),"evenbets","max",maxloss=500,maxwin=1000),function(x){cbind(x[1],x[5])})
playbyplay
for(i in 1:1000)
for(i in 1:1000){}
for(i in 1:1000){}
for(i in 1:1000){
pbp <- roulette(1000,c(5,20),"evenbets","max",maxloss=500,maxwin=1000)
}
money=c90
money=c()
rounds=()
rounds=c()
for(i in 1:100){
pbp <- roulette(1000,c(5,20),"evenbets","max",maxloss=500,maxwin=1000)
rounds <- c(rounds,pbp$round)
money <- c(money,pbp$money)
}
plot(money~rounds)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/wheel.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/outcome.r', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/bets.R', echo=TRUE)
money=10
lastbet=0
numberwins=0
numberloss=0
placingstrategy="evenbets"
bettingstrategy="cancellation"
round=1
tablelimit=10
bets=bets()
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/bets.R', echo=TRUE)
betz <- bets()
payoutslist <- c(rep(35,38),rep(17,50),rep(11,12),rep(5,11),rep(8,22),rep(2,3),rep(2,3),rep(1,2),rep(1,2),rep(1,2))
names(payoutslist) <- betslist
betslist <- bets(betslist=T)
bets=betslist
names(payoutslist) <- betslist
payouts=payoutslist
stopifnot(length(tablelimit)<3)
if(length(tablelimit)==1){
tablemin = 1
tablemax = tablelimit
}else{
tablemin = min(tablelimit)
tablemax = max(tablelimit)
}
minbet <- tablemin
if(money<=tablemax){
maxbet <- money
}else{
maxbet <- tablemax
}
numMatch <- grepl("\\d[0-100000]",bettingstrategy,fixed=F)
colonMatch <- grepl(":",bettingstrategy)
if(any(numMatch)&all(colonMatch==F)){
stopifnot(sum(numMatch)==1)
betpile <- as.numeric(bettingstrategy[numMatch])
}
if(any(colonMatch)){
stopifnot(sum(colonMatch)==1)
range <- as.numeric(unlist(strsplit(bettingstrategy[numMatch],":")))
if(min(range)>tablemin){
minbet <- min(range)
}
maxbet <- max(range)
}
if("random"%in%bettingstrategy){
betpile <- sample(minbet:maxbet,1)
}
if("min"%in%bettingstrategy){
betpile <- minbet
}
if("max"%in%bettingstrategy){
betpile <- maxbet
}
if("fives"%in%bettingstrategy){
betpile <- sample(seq(0,maxbet,by=5),1)
}
if(("martingale"%in%bettingstrategy)){
betpile <- betpile*(2^numberloss)
if(betpile>tablemax){
playerbets <- c(paste("Simulation stopped: Martingale bet of",betpile,"supersedes the tablelimit of",paste0(tablemax,". No more bets allowed.")))
return(playerbets)
}
numberbets <- 1
placingstrategy <- "evenbets"
}
if("1326multip."%in%bettingstrategy){
numberwins <- numberwins+1
nw <- rep(c(1,3,2,6),length.out=numberwins)
nw <- nw[numberwins]
betpile <- betpile*nw
}
if("cancellation"%in%bettingstrategy){
if(!exists(bettingsequence)){
bettingsequence <<- seq(1:(betpile-1),by=1)
}
if(numberwins>0){
bettingsequence <- bettingsequence[-c(1,length(bettingsequence))]
}
if(numberloss>0){
bettingsequence <- c(bettingsequence,lastbet)
}
betpile <- bettingsequence[c(1,length(bettingsequence))]
}
if("cancellation"%in%bettingstrategy){
if(!exists("bettingsequence")){
bettingsequence <<- seq(1:(betpile-1),by=1)
}
if(numberwins>0){
bettingsequence <- bettingsequence[-c(1,length(bettingsequence))]
}
if(numberloss>0){
bettingsequence <- c(bettingsequence,lastbet)
}
betpile <- bettingsequence[c(1,length(bettingsequence))]
}
tablelimit=(1:20)
stopifnot(length(tablelimit)<3)
if(length(tablelimit)==1){
tablemin = 1
tablemax = tablelimit
}else{
tablemin = min(tablelimit)
tablemax = max(tablelimit)
}
minbet <- tablemin
if(money<=tablemax){
maxbet <- money
}else{
maxbet <- tablemax
}
numMatch <- grepl("\\d[0-100000]",bettingstrategy,fixed=F)
colonMatch <- grepl(":",bettingstrategy)
if(any(numMatch)&all(colonMatch==F)){
stopifnot(sum(numMatch)==1)
betpile <- as.numeric(bettingstrategy[numMatch])
}
if(any(colonMatch)){
stopifnot(sum(colonMatch)==1)
range <- as.numeric(unlist(strsplit(bettingstrategy[numMatch],":")))
if(min(range)>tablemin){
minbet <- min(range)
}
maxbet <- max(range)
}
if("random"%in%bettingstrategy){
betpile <- sample(minbet:maxbet,1)
}
if("min"%in%bettingstrategy){
betpile <- minbet
}
if("max"%in%bettingstrategy){
betpile <- maxbet
}
if("fives"%in%bettingstrategy){
betpile <- sample(seq(0,maxbet,by=5),1)
}
if(("martingale"%in%bettingstrategy)){
betpile <- betpile*(2^numberloss)
if(betpile>tablemax){
playerbets <- c(paste("Simulation stopped: Martingale bet of",betpile,"supersedes the tablelimit of",paste0(tablemax,". No more bets allowed.")))
return(playerbets)
}
numberbets <- 1
placingstrategy <- "evenbets"
}
if("1326multip."%in%bettingstrategy){
numberwins <- numberwins+1
nw <- rep(c(1,3,2,6),length.out=numberwins)
nw <- nw[numberwins]
betpile <- betpile*nw
}
if("cancellation"%in%bettingstrategy){
if(!exists("bettingsequence")){
bettingsequence <<- seq(1:(betpile-1),by=1)
}
if(numberwins>0){
bettingsequence <- bettingsequence[-c(1,length(bettingsequence))]
}
if(numberloss>0){
bettingsequence <- c(bettingsequence,lastbet)
}
betpile <- bettingsequence[c(1,length(bettingsequence))]
}
bettingstrategy=c("cancellation",30)
numMatch <- grepl("\\d[0-100000]",bettingstrategy,fixed=F)
colonMatch <- grepl(":",bettingstrategy)
if(any(numMatch)&all(colonMatch==F)){
stopifnot(sum(numMatch)==1)
betpile <- as.numeric(bettingstrategy[numMatch])
}
if(any(colonMatch)){
stopifnot(sum(colonMatch)==1)
range <- as.numeric(unlist(strsplit(bettingstrategy[numMatch],":")))
if(min(range)>tablemin){
minbet <- min(range)
}
maxbet <- max(range)
}
if("random"%in%bettingstrategy){
betpile <- sample(minbet:maxbet,1)
}
if("min"%in%bettingstrategy){
betpile <- minbet
}
if("max"%in%bettingstrategy){
betpile <- maxbet
}
if("fives"%in%bettingstrategy){
betpile <- sample(seq(0,maxbet,by=5),1)
}
if(("martingale"%in%bettingstrategy)){
betpile <- betpile*(2^numberloss)
if(betpile>tablemax){
return(playerbets)
numberbets <- 1
if("1326multip."%in%bettingstrategy){
placingstrategy <- "evenbets"
playerbets <- c(paste("Simulation stopped: Martingale bet of",betpile,"supersedes the tablelimit of",paste0(tablemax,". No more bets allowed.")))
}
}
numberwins <- numberwins+1
nw <- rep(c(1,3,2,6),length.out=numberwins)
nw <- nw[numberwins]
betpile <- betpile*nw
}
if("cancellation"%in%bettingstrategy){
if(!exists("bettingsequence")){
bettingsequence <<- seq(1:(betpile-1),by=1)
}
if(numberwins>0){
bettingsequence <- bettingsequence[-c(1,length(bettingsequence))]
}
if(numberloss>0){
bettingsequence <- c(bettingsequence,lastbet)
}
betpile <- bettingsequence[c(1,length(bettingsequence))]
}
if("cancellation"%in%bettingstrategy){
if(!exists("bettingsequence")){
bettingsequence <<- seq(1,(betpile-1),by=1)
}
if(numberwins>0){
bettingsequence <- bettingsequence[-c(1,length(bettingsequence))]
}
if(numberloss>0){
bettingsequence <- c(bettingsequence,lastbet)
}
betpile <- bettingsequence[c(1,length(bettingsequence))]
}
bettingsequence
evenbets <- bets[payouts==1]
numberbets <- sample(1,1)
ok <- F
while(ok==F){
if(placingstrategy=="random"){
bettypes <- sample(bets,numberbets)
}
if(placingstrategy=="evenbets"){
bettypes <- sample(evenbets,numberbets)
}
if((betpile%%length(bettypes))==0){
ok<-T
}
}
playerbets <- rbind(bettypes,rep(1,length(bettypes)))
betpile <- betpile - length(bettypes)
if(betpile>0){
while(betpile>0){
amount <- sample(1:betpile,1)
type <- sample(1:ncol(playerbets),1)
playerbets[2,type] <- as.numeric(playerbets[2,type])+amount
betpile <- betpile-amount
}
}
rownames(playerbets) <- c("bettypes","betamounts")
betpile
betpile <- bettingsequence[c(1)]+bettingsequence[length(bettingsequence)]
}
evenbets <- bets[payouts==1]
numberbets <- sample(1,1)
ok <- F
while(ok==F){
if(placingstrategy=="random"){
bettypes <- sample(bets,numberbets)
if(placingstrategy=="evenbets"){
bettypes <- sample(evenbets,numberbets)
if((betpile%%length(bettypes))==0){
}
playerbets <- rbind(bettypes,rep(1,length(bettypes)))
}
betpile <- betpile - length(bettypes)
}
if(betpile>0){
}
ok<-T
while(betpile>0){
amount <- sample(1:betpile,1)
type <- sample(1:ncol(playerbets),1)
playerbets[2,type] <- as.numeric(playerbets[2,type])+amount
betpile <- betpile-amount
}
}
rownames(playerbets) <- c("bettypes","betamounts")
playerbets
playerbets$betamounts
playerbets[2]
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/bets.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
View(test)
bettingsequence
bettingsequence[-c(1,length(bettingsequence))]
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
?get
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
.GlobalEnv
betseq <- get("bettingsequence",.GlobalEnv)
betseq
bettingsequence
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/outcome.r', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/wheel.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/bets.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
?assign
assign("bettingsequence",seq(1,(betpile-1),by=1),parent.env)
betpile=40
assign("bettingsequence",seq(1,(betpile-1),by=1),parent.env)
assign("bettingsequence",seq(1,(betpile-1),by=1),envir=parent.env)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
assign("bettingsequence",betseq,envir=environment(roulette),inherits=F)
betseq <- c(bettingsequence,as.numeric(lastbet[2]))
lastbet=10
betseq <- c(bettingsequence,as.numeric(lastbet[2]))
betseq <- c(bettingsequence,as.numeric(lastbet))
assign("bettingsequence",betseq,envir=environment(roulette),inherits=F)
environment(roulette)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/wheel.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/outcome.r', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/bets.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
rm(bettingsequence)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
View(test)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
View(test)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
rm(bettingsequence)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
?rm
View(test)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
rm(bettingsequence)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
as.environment(roulette)
as.environment("roulette")
environment()
environment(2)
environment(1)
environment(0)
environment(-1)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/roulette.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Roulette/player.R', echo=TRUE)
test <- roulette(1500,c(5,1700),"evenbets",c("cancellation",30),maxloss=1500,maxround=100)
View(test)
